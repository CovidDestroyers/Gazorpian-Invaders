{"version":3,"sources":["webpack://gazorpian-invaders/./public/js/auth/signUp.js"],"names":["$","signupUserName","getInputValue","signupPassword","confirmPassword","Promise","resolve","setTimeout","removeAttr","click","event","preventDefault","addSpinner","postSignUpData","backEndResponse","status","data","addWarningAlert","username","highScore","addCardBody","prop","replaceContent","val","addFailureAlert"],"mappings":"iKAaAA,GAAE,WACA,IAAIC,GAAiBC,QAAc,gBAC/BC,GAAiBD,QAAc,mBAC/BE,GAAkBF,QAAc,qBAEpC,gCAAC,gGAEsB,KAAnBD,GACmB,KAAnBE,GACoB,KAApBC,EAJH,uBAMGH,GAAiBC,QAAc,gBAC/BC,GAAiBD,QAAc,mBAC/BE,GAAkBF,QAAc,oBARnC,SAUS,IAAIG,SAAQ,SAACC,GACjBC,WAAWD,EAAS,QAXzB,sDAeQN,EAAE,cAAcQ,WAAW,aAfnC,0CAAD,GAkBAR,EAAE,cAAcS,MAAhB,kDAAsB,WAAOC,GAAP,qGACpBA,EAAMC,iBADc,UAIlBC,QAAW,aAJO,UAMYC,QAAe,gBAN3B,OAMZC,EANY,OAWH,aAFPC,EAAWD,EAAgBE,KAA3BD,SAGNE,QAAgB,aAAcF,IACzB,EAC2BD,EAAgBE,KAAxCE,EADH,EACGA,SAAUC,EADb,EACaA,WAElBC,QAAY,gBAAiBF,EAAUC,GAEvCnB,EAAE,WAAWqB,KAAK,UAAU,GAC5BrB,EAAE,UAAUqB,KAAK,UAAU,GAC3BrB,EAAE,WAAWQ,WAAW,UACxBR,EAAE,gBAAgBS,UAGpBa,QAAe,YAAa,WAE5BtB,EAAE,iBAAiBuB,IAAI,IACvBvB,EAAE,oBAAoBuB,IAAI,IAC1BvB,EAAE,qBAAqBuB,IAAI,IA5BT,mDAgClBD,QAAe,YAAa,YAC5BE,QAAgB,cAjCE,0DAAtB,4D","file":"signup.25e89e8627b4697597be.js","sourcesContent":["/* eslint-disable import/extensions, no-undef */\nimport 'regenerator-runtime/runtime.js';\n\nimport {\n  getInputValue,\n  postSignUpData,\n  addFailureAlert,\n  addSpinner,\n  replaceContent,\n  addWarningAlert,\n  addCardBody\n} from './authMe.js';\n\n$(() => {\n  let signupUserName = getInputValue('new-username');\n  let signupPassword = getInputValue('signup-password');\n  let confirmPassword = getInputValue('confirm-password');\n\n  (async () => {\n    while (\n      signupUserName === '' ||\n      signupPassword === '' ||\n      confirmPassword === ''\n    ) {\n      signupUserName = getInputValue('new-username');\n      signupPassword = getInputValue('signup-password');\n      confirmPassword = getInputValue('confirm-password');\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise((resolve) => {\n        setTimeout(resolve, 1000);\n      });\n    }\n\n    return $('#signupBtn').removeAttr('disabled');\n  })();\n\n  $('#signupBtn').click(async (event) => {\n    event.preventDefault();\n\n    try {\n      addSpinner('signupBtn');\n\n      const backEndResponse = await postSignUpData('/auth/signup');\n      // console.log(backEndResponse);\n\n      const { status } = backEndResponse.data;\n\n      if (status !== 'success') {\n        addWarningAlert('signupForm', status);\n      } else {\n        const { username, highScore } = backEndResponse.data;\n\n        addCardBody('username-card', username, highScore);\n\n        $('#signup').prop('hidden', true);\n        $('#login').prop('hidden', true);\n        $('#logout').removeAttr('hidden');\n        $('#closeSignup').click();\n      }\n\n      replaceContent('signupBtn', 'Sign Up');\n\n      $('#new-username').val('');\n      $('#signup-password').val('');\n      $('#confirm-password').val('');\n      // hide signup button\n      // display username => 'Welcome username'\n    } catch (error) {\n      replaceContent('signupBtn', 'Sign Up');\n      addFailureAlert('signupForm');\n    }\n  });\n});\n"],"sourceRoot":""}